<?xml version = "1.0"?>
<project name = "Hello World Project" default = "info" xmlns:jacoco="antlib:org.jacoco.ant">
	<tstamp>
		<format property="time.stamp" pattern="yyyy-MM-dd_HH:mm:ss"/>
	</tstamp>

	<property name = "main.src.dir" value = "src"/>
	<property name = "main.build.dir" value = "bin"/>
	<property name = "test.src.dir" value = "test"/>
	<property name = "test.libs" value = "libs"/>
	<property name = "test.build.dir" value="bin"/> <!-- Same to have the other class visible to test file -->
	<property name = "result.exec.file" location="jacoco.exec"/>
	<property name = "result.report.dir" value="reports/coverage" />

	<path id="classpath.test">
	    <pathelement location="libs/junit-4.12.jar"/>
	    <pathelement location="libs/hamcrest-core-1.3.jar"/>
	    <pathelement location="libs/testFx-3.1.2.jar"/>
	    <pathelement location="libs/testfx-core-4.0.12-alpha.jar"/>
	    <pathelement location="libs/testfx-internal-java8-4.0.12-alpha.jar"/>
	    <pathelement location="libs/testfx-junit-4.0.12-alpha.jar"/>
	    <pathelement location="libs/testfx-junit-4.0.15-alpha.jar"/>
	    <pathelement location="libs/okhttp-2.5.0.jar"/>
	    <pathelement location="libs/okio-2.1.0.jar"/>
	    <pathelement location="libs/kotlin-stdlib-1.3.0.jar"/>
	    <pathelement location="libs/kotlin-stdlib-common-1.3.0.jar"/>
	    <pathelement location="libs/okio-2.1.0.jar"/>
	    <pathelement location="libs/gson-2.5.jar"/>
	    <pathelement location="libs/mongo-java-driver-3.4.2.jar"/>
		<pathelement location="libs/guava-23.0.jar"/>
	    <pathelement location="${test.build.dir}"/>
  	</path>

  	<path id="classpath.main">
	    <pathelement location="libs/annotations-13.0.jar"/>
	    <pathelement location="libs/kotlin-stdlib-1.3.0.jar"/>
	    <pathelement location="libs/kotlin-stdlib-common-1.3.0.jar"/>
	    <pathelement location="libs/okhttp-2.5.0.jar"/>
	    <pathelement location="libs/okio-2.1.0.jar"/>
	    <pathelement location="libs/gson-2.5.jar"/>
	    <pathelement location="libs/mongo-java-driver-3.4.2.jar"/>
	    <pathelement location="libs/guava-23.0.jar"/>
		<pathelement location="${main.build.dir}"/>
  	</path>

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="libs/jacocoant.jar"/>
    </taskdef>

	<target name = "info">
		<echo>Hello World - Welcome to Apache Ant!</echo>
	</target>

	<target name = "compile" description = "Compile main GUI java files">
		<!-- <mkdir dir = "${build.dir}"/> -->
		<javac srcdir="${main.src.dir}" destdir = "${main.build.dir}" source = "1.8" target = "1.8" debug = "true" deprecation = "false" optimize = "false" failonerror = "true" includeantruntime="false">
			<classpath refid="classpath.main"/>
		</javac>
	</target>

	<target name="test-compile" depends="compile">
		<!-- <mkdir dir="${test.build.dir}"/> -->
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" source = "1.8" target = "1.8" debug = "true" deprecation = "false" optimize = "false" failonerror = "true" includeantruntime="false">
	    	<classpath refid="classpath.test"/>
		</javac>
	</target>

	<target name="test" depends="test-compile">
		<jacoco:coverage>
			<junit printsummary="on" haltonfailure="yes" fork="true">
				<classpath>
				<path refid="classpath.test"/>
				<pathelement location="${test.build.dir}"/>
				</classpath>
				<formatter type="brief" usefile="false" />
				<batchtest>
					<fileset dir="${test.src.dir}" includes="**/*Test.java">
						<exclude name="**/MainUITest.java"/>
					</fileset>
				</batchtest>
			</junit>
		</jacoco:coverage>
	</target>

	<target name="report">
		<!-- Step 3: Create coverage report -->
		<jacoco:report>

			<!-- This task needs the collected execution data and ... -->
			<executiondata>
				<file file="${result.exec.file}" />
			</executiondata>

			<!-- the class files and optional source files ... -->
			<structure name="JaCoCo Coverage">
				<classfiles>
					<fileset dir="${main.build.dir}" includes="**/*.class" />
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${main.src.dir}" includes="**/*.java">
						<exclude name="**/MainUITest.java"/>
					</fileset>
				</sourcefiles>
			</structure>

			<!-- to produce reports in different formats. -->
			<html destdir="${result.report.dir}/html" />
			<csv destfile="${result.report.dir}/csv/report-${time.stamp}.csv" />
			<xml destfile="${result.report.dir}/xml/report-${time.stamp}.xml" />
		</jacoco:report>
	</target>
  
</project>